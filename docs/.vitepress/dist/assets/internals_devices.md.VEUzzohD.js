import{d as n}from"./chunks/repos.DJKPRKxc.js";import{c as l,o as i,ae as s,j as e,F as o,B as d,t as r,k as c}from"./chunks/framework.DuQveFC-.js";const u=["href"],f=["href"],b=JSON.parse('{"title":"Unofficially supported devices","description":"","frontmatter":{},"headers":[],"relativePath":"internals/devices.md","filePath":"internals/devices.md"}'),p={name:"internals/devices.md"},k=Object.assign(p,{setup(_){return(h,a)=>(i(),l("div",null,[a[1]||(a[1]=s('<h1 id="unofficially-supported-devices" tabindex="-1">Unofficially supported devices <a class="header-anchor" href="#unofficially-supported-devices" aria-label="Permalink to &quot;Unofficially supported devices&quot;">â€‹</a></h1><div class="info custom-block github-alert"><p class="custom-block-title">INFO</p><p>Here is the list of devices unofficially supported by KernelSU Next</p></div><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>In this page, there are kernels for devices unofficially supporting KernelSU Next, maintained by other developers. So, be cautious about what you are flashing!</p></div>',3)),e("table",null,[a[0]||(a[0]=e("thead",null,[e("tr",null,[e("th",null,"Maintainer"),e("th",null,"Repository"),e("th",null,"Support devices")])],-1)),e("tbody",null,[(i(!0),l(o,null,d(c(n),t=>(i(),l("tr",{key:t.devices},[e("td",null,[e("a",{href:t.maintainer_link,target:"_blank",rel:"noreferrer"},r(t.maintainer),9,u)]),e("td",null,[e("a",{href:t.kernel_link,target:"_blank",rel:"noreferrer"},r(t.kernel_name),9,f)]),e("td",null,r(t.devices),1)]))),128))])])]))}});export{b as __pageData,k as default};
